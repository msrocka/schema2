{
  "$id": "Parameter.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "title": "Parameter",
  "properties": {
    "@id": {
      "type": "string",
      "format": "uuid",
      "description": "The ID of the `Parameter`."
    },
    "@type": {
      "const": "Parameter"
    },
    "name": {
      "type": "string",
      "description": "The name of the entity.",
      "protoIndex": 3
    },
    "description": {
      "type": "string",
      "description": "The description of the entity.",
      "protoIndex": 4
    },
    "version": {
      "type": "string",
      "description": "A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH fields are optional and the fields may have leading zeros (so 01.00.00 is the same as 1.0.0 or 1).\n",
      "protoIndex": 5
    },
    "lastChange": {
      "type": "string",
      "format": "date-time",
      "description": "The timestamp when the entity was changed the last time.",
      "protoIndex": 6
    },
    "category": {
      "$ref": "Ref.schema.json",
      "description": "The category of the entity.",
      "protoIndex": 7
    },
    "tags": {
      "type": "array",
      "item": "string",
      "description": "A list of optional tags. A tag is just a string which should not contain commas (and other special characters).\n",
      "protoIndex": 8
    },
    "library": {
      "type": "string",
      "description": "If this entity is part of a library, this field contains the identifier of that library. The identifier is typically just the combination of the library name and version.\n",
      "protoIndex": 9
    },
    "parameterScope": {
      "$ref": "ParameterScope.schema.json",
      "description": "The scope where the parameter is valid.",
      "protoIndex": 10
    },
    "inputParameter": {
      "type": "boolean",
      "description": "Indicates whether the parameter is an input parameter (true) or a dependent/calculated parameter (false). A parameter can have a formula if it is not an input parameter.\n",
      "protoIndex": 11
    },
    "value": {
      "type": "number",
      "description": "The parameter value.",
      "protoIndex": 12
    },
    "formula": {
      "type": "string",
      "description": "A mathematical expression to calculate the parameter value.",
      "protoIndex": 13
    },
    "uncertainty": {
      "$ref": "Uncertainty.schema.json",
      "description": "An uncertainty distribution of the parameter value. This is only valid for input parameters.",
      "protoIndex": 14
    }
  },
  "description": "In openLCA, parameters can be defined in different scopes: global, process, or LCIA method. The parameter name can be used in formulas and, thus, need to conform to a specific syntax. Within a scope the parameter name should be unique (otherwise the evaluation is not deterministic). There are two types of parameters in openLCA: input parameters and dependent parameters. An input parameter can have an optional uncertainty distribution but not a formula. A dependent parameter can (should) have a formula (where also other parameters can be used) but no uncertainty distribution.\n"
}