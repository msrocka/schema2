{
  "$id": "Flow.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "title": "Flow",
  "properties": {
    "@id": {
      "type": "string",
      "format": "uuid",
      "description": "The ID of the `Flow`."
    },
    "@type": {
      "const": "Flow"
    },
    "name": {
      "type": "string",
      "description": "The name of the entity.",
      "protoIndex": 3
    },
    "description": {
      "type": "string",
      "description": "The description of the entity.",
      "protoIndex": 4
    },
    "version": {
      "type": "string",
      "description": "A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH fields are optional and the fields may have leading zeros (so 01.00.00 is the same as 1.0.0 or 1).\n",
      "protoIndex": 5
    },
    "lastChange": {
      "type": "string",
      "format": "date-time",
      "description": "The timestamp when the entity was changed the last time.",
      "protoIndex": 6
    },
    "category": {
      "$ref": "Ref.schema.json",
      "description": "The category of the entity.",
      "protoIndex": 7
    },
    "tags": {
      "type": "array",
      "item": "string",
      "description": "A list of optional tags. A tag is just a string which should not contain commas (and other special characters).\n",
      "protoIndex": 8
    },
    "library": {
      "type": "string",
      "description": "If this entity is part of a library, this field contains the identifier of that library. The identifier is typically just the combination of the library name and version.\n",
      "protoIndex": 9
    },
    "flowType": {
      "$ref": "FlowType.schema.json",
      "description": "The type of the flow. Note that this type is more a descriptor of how the flow is handled in calculations.\n",
      "protoIndex": 10
    },
    "cas": {
      "type": "string",
      "description": "A CAS number of the flow.",
      "protoIndex": 11
    },
    "formula": {
      "type": "string",
      "description": "A chemical formula of the flow.",
      "protoIndex": 12
    },
    "flowProperties": {
      "type": "array",
      "item": {
        "$ref": "FlowPropertyFactor.schema.json"
      },
      "description": "The flow properties (quantities) in which amounts of the flow can be expressed together with conversion factors between these flow flow properties.\n",
      "protoIndex": 13
    },
    "location": {
      "$ref": "Ref.schema.json",
      "description": "The location of the flow. Normally the location of a flow is defined by the process location where the flow is an input or output. However, some data formats define a location as a property of a flow.\n",
      "protoIndex": 14
    },
    "synonyms": {
      "type": "string",
      "description": "A list of synonyms but packed into a single field. Best is to use semicolons as separator as commas are sometimes used in names of chemicals.\n",
      "protoIndex": 15
    },
    "infrastructureFlow": {
      "type": "boolean",
      "description": "Indicates whether this flow describes an infrastructure product. This field is part of the openLCA schema because of backward compatibility with EcoSpold 1. It does not really have a meaning in openLCA and should not be used anymore.\n",
      "protoIndex": 16
    }
  },
  "description": "Everything that can be an input or output of a process (e.g. a substance, a product, a waste, a service etc.)\n"
}