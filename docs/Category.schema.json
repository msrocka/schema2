{
  "$id": "Category.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "title": "Category",
  "properties": {
    "@id": {
      "type": "string",
      "format": "uuid",
      "description": "The ID of the `Category`."
    },
    "@type": {
      "const": "Category"
    },
    "name": {
      "type": "string",
      "description": "The name of the entity.",
      "protoIndex": 3
    },
    "description": {
      "type": "string",
      "description": "The description of the entity.",
      "protoIndex": 4
    },
    "version": {
      "type": "string",
      "description": "A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH fields are optional and the fields may have leading zeros (so 01.00.00 is the same as 1.0.0 or 1).\n",
      "protoIndex": 5
    },
    "lastChange": {
      "type": "string",
      "format": "date-time",
      "description": "The timestamp when the entity was changed the last time.",
      "protoIndex": 6
    },
    "category": {
      "$ref": "Ref.schema.json",
      "description": "The category of the entity.",
      "protoIndex": 7
    },
    "tags": {
      "type": "array",
      "item": "string",
      "description": "A list of optional tags. A tag is just a string which should not contain commas (and other special characters).\n",
      "protoIndex": 8
    },
    "library": {
      "type": "string",
      "description": "If this entity is part of a library, this field contains the identifier of that library. The identifier is typically just the combination of the library name and version.\n",
      "protoIndex": 9
    },
    "modelType": {
      "$ref": "ModelType.schema.json",
      "description": "The type of models that can be linked to the category.",
      "protoIndex": 10
    }
  },
  "description": "A category is used for the categorisation of types like processes, flows, etc. The tricky thing is that the `Category` class inherits also from the [CategorizedEntity] type so that a category can have a category attribute which is then the parent category of this category (uff).\n"
}